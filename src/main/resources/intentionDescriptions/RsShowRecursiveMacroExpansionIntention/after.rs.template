macro_rules! wrapper {
    ($name:ident, $t:ty) => {
        #[derive(Debug)]
        struct $name {
            inner: $t
        }

        new_impl!($name, $t);
    };
}

macro_rules! new_impl {
    ($name:ident, $t:ty) => {
        impl $name {
            fn new(x: $t) -> $name {
                $name {
                    inner: x
                }
            }
        }
    };
}

<spot>// Will be shown in popup
#[derive(Debug)]
struct Bar {
  inner: i32
}
impl Bar {
  fn new(x: i32) -> Bar {
      Bar {
          inner: x
      }
  }
}</spot>
